name: c001apk Beta

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths-ignore:
      - "**.md"
      - "**.txt"
      - ".github/**"
      - ".idea/**"
      - "!.github/workflows/**"

jobs:
  update_version:
    name: Read and update version
    runs-on: ubuntu-latest

    outputs:
      # 定义输出变量 version，以便在其他job中引用
      new_version: ${{ steps.version.outputs.new_version }}
      last_commit: ${{ steps.get-last-commit.outputs.last_commit }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: 获取first parent commit次数
        id: get-first-parent-commit-count
        run: |
          first_parent_commit_count=$(git rev-list --first-parent --count $recent_release_tag..HEAD)
          echo "count=$first_parent_commit_count" >> $GITHUB_OUTPUT

      - name: 获取最后一次提交
        id: get-last-commit
        run: |
          last_commit=$(git log -1 --pretty="%h %s" --first-parent)
          echo "last_commit=$last_commit" >> $GITHUB_OUTPUT

      - name: 更新版本号
        id: version
        run: |
          # 读取版本号
          VERSION=$(yq e .version pubspec.yaml | cut -d "+" -f 1)

          # 获取GitHub Actions的run_number
          #RUN_NUMBER=${{ github.run_number }}

          # 构建新版本号
          NEW_VERSION=$VERSION-beta.${{ steps.get-first-parent-commit-count.outputs.count }}

          # 输出新版本号
          echo "New version: $NEW_VERSION"

          # 设置新版本号为输出变量
          echo "new_version=$NEW_VERSION" >>$GITHUB_OUTPUT

  android:
    name: Build CI (Android)
    needs: update_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: 构建Java环境
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
          token: ${{secrets.GIT_TOKEN}}

      - name: 检查缓存
        uses: actions/cache@v3
        id: cache-flutter
        with:
          path: /root/flutter-sdk
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: 安装Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: any
          flutter-version: 3.24.x

      - name: 下载项目依赖
        run: flutter pub get

      - name: 解码生成 jks
        run: echo $KEYSTORE_BASE64 | base64 -di > android/app/vvex.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: 更新版本号
        id: version
        run: |
          # 更新pubspec.yaml文件中的版本号
          sed -i "s/version: .*+/version: ${{ needs.update_version.outputs.new_version }}+/g" pubspec.yaml

      - name: flutter build apk
        run: flutter build apk --release --split-per-abi
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}

      - name: 重命名应用
        run: |
          for file in build/app/outputs/flutter-apk/app-*.apk; do
            if [[ $file =~ app-(.?*)release.apk ]]; then
              new_file_name="build/app/outputs/flutter-apk/app-${BASH_REMATCH[1]}v${{ needs.update_version.outputs.new_version }}.apk"
              mv "$file" "$new_file_name"
            fi
          done
          ls build/app/outputs/flutter-apk/

      - name: 上传
        uses: actions/upload-artifact@v3
        with:
          name: c001apk-Beta
          path: |
            build/app/outputs/flutter-apk/app-*.apk
